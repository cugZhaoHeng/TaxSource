<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
		
	<!-- 扫描service包 -->
	<context:component-scan base-package="com.zdsoft.**.service"></context:component-scan>
	
	<!-- 配置数据库连接 -->
	<bean class="com.mchange.v2.c3p0.ComboPooledDataSource" id="dataSource">
		<property name="driverClass" value="com.mysql.jdbc.Driver"></property>
		<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/db_tax_source"></property>
		<property name="user" value="root"></property>
		<property name="password" value="123"></property>
		
		<!-- 创建数据库连接池 -->
		<property name="initialPoolSize" value="3"></property>
		<property name="minPoolSize" value="3"></property>
		<property name="maxPoolSize" value="15"></property>
		<property name="maxConnectionAge" value="28800"></property>
		<property name="maxIdleTime" value="26600"></property>
	</bean>
	
	<!-- 配置事务管理器 -->
	<bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="transactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 有了事务管理器之后，配置事务通知，并引入事务管理器，这里的id会引用到切面中，需要导入事务管理器的相关jar包 -->
	<tx:advice transaction-manager="transactionManager" id="txAdvice">
		<tx:attributes>
			<!-- 使用该事务方法的方法名，增删改必须配置传播行为，而只读属性为false -->
			<tx:method name="save*" propagation="REQUIRED"/>
			<tx:method name="add*" propagation="REQUIRED"/>
			<tx:method name="insert*" propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="modify*" propagation="REQUIRED"/>
			<tx:method name="remove*" propagation="REQUIRED"/>
			<tx:method name="delete*" propagation="REQUIRED"/>
			
			<!-- 查询方法不能做修改，传播行为可以在事务之外 -->
			<tx:method name="select*" propagation="SUPPORTS" read-only="true"/>
			<tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
			<tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
			<tx:method name="query*" propagation="SUPPORTS" read-only="true"/>
			<tx:method name="list*" propagation="SUPPORTS" read-only="true"/>
			<tx:method name="count*" propagation="SUPPORTS" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	
	<!-- 配置事务切面，需要引入事务通知，注意：这里通配符..是aspectJ的语法，而通配符**是Spring的语法 -->
	<aop:config>
		<!-- 匹配到所有的service实现类 -->
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* com.zdsoft..service.impl.*.*(..))"/>
	</aop:config>
	
	<!-- 整合Spring和mybatis，引入SqlSessionFactory -->
	<bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sessionFactory">
		<!-- 这里引入数据库连接池，将spring和mybatis真正的连接上 -->
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 扫描dao层的包，生成动态代理，实现数据库的操作，这里要求dao层的接口和映射文件同名同包 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="beanName" value="sessionFactory"></property>
		<property name="basePackage" value="com.zdsoft.**.dao"></property>
	</bean>
	
</beans>
